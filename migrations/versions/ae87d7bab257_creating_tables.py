"""Creating tables

Revision ID: ae87d7bab257
Revises: 
Create Date: 2023-11-02 14:47:42.872537

"""
from datetime import datetime
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import CheckConstraint

# revision identifiers, used by Alembic.
revision: str = 'ae87d7bab257'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('computers',
    sa.Column('computer_id', sa.BIGINT(), nullable=False),
    sa.Column('brand', sa.String(length=255), nullable=False),
    sa.Column('model', sa.String(length=255), nullable=False),
    sa.Column('cpu', sa.String(length=255), nullable=False),
    sa.Column('ram', sa.Integer(), nullable=False),
    sa.Column('storage', sa.Integer(), nullable=False),
    sa.Column('gpu', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(length=255), nullable=False),
    sa.Column('price_per_hour', sa.Integer(), nullable=False),
    sa.Column('is_reserved', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('computer_id')
    )
    op.create_index(op.f('ix_computers_computer_id'), 'computers', ['computer_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('fullname', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('email_address', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('is_admin', sa.Boolean(), default=False, nullable=False),
    sa.Column('is_blocked', sa.Boolean(), default=False, nullable=False),
    sa.Column('is_active', sa.Boolean(), default=True, nullable=False),
    sa.Column('balance', sa.Integer(), CheckConstraint("balance >= 0"), default=0, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), default=datetime.utcnow, nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), default=datetime.utcnow, onupdate=datetime.utcnow, nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('bookings',
    sa.Column('id', sa.BIGINT(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=False),
    sa.Column('computer_id', sa.BIGINT(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['computer_id'], ['computers.computer_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bookings_id'), 'bookings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_bookings_id'), table_name='bookings')
    op.drop_table('bookings')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_computers_computer_id'), table_name='computers')
    op.drop_table('computers')
    # ### end Alembic commands ###
